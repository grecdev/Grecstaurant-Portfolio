*,
*:before,
*:after {
	box-sizing: inherit;
	box-sizing: border-box;
}

html {
	height: 100%;
	overflow-x: hidden;
}

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
	display: block;
}

body {
	font: normal 1rem/1.5 'Merriweather', serif;
	overflow: hidden;
	position: relative;
	min-height: 100%;
	background: $primary-dark;
	color: $primary-white;
}

ol, ul {
	list-style: none;
}

blockquote, q {
	quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}

table {
	border-collapse: collapse;
	border-spacing: 0;
}

/* Responsive images */
img {
	display: block;
	width: 100%;
	height: auto;
}

a, button {
	background: none;
	outline: none;
	border: none;
	cursor: pointer;
	color: inherit;
	text-decoration: none;
	text-transform: inherit;
	font-size: inherit;
}

svg {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
}

/*** Utlity Classes ***/
.container {
	max-width: 1100px;
	margin: 0 auto;
	overflow: hidden;
	position: relative;
	padding: 2rem;
	
}

/** Text **/
/* Heading title */
.heading-title { font-family: 'Lora', serif }

.heading-bold { font-weight: 700 }

.heading-xs { font-size: 1.3rem }
.heading-sm { font-size: 1.5rem }
.heading-md { font-size: 1.8rem }
.heading-lg { font-size: 2.2rem }

/* Descriptions */
.description {
	font-weight: 300;
	font-style: italic;
}

.description-sm { font-size: 1.1rem }
.description-md { font-size: 1.2rem }
.description-lg { font-size: 1.3rem }

/* Active page */
.active-page { color: $primary-white }

/* Highlight text */
.highlight-red { color: $primary-red }

/* Text Align */
.text-left { text-align: left }
.text-center { text-align: center }
.text-right { text-align: right }

/* Margins / Paddings */
.mb-xs { margin-bottom: .8rem }
.mb-sm { margin-bottom: 1rem }
.mb-md { margin-bottom: 1.4rem }
.mb-lg { margin-bottom: 1.7rem }

/** Buttons **/
.btn {
	padding: .5rem 1rem;
	border-radius: 5px;
	transition: all 200ms ease-in-out;
	
	&-red {
		background: $primary-red;
		color: $primary-white;

		&:hover { background: darken($primary-red, 10%) }
	}

	&-dark {
		background: $primary-dark;
		color: $primary-white;

		&:hover { background: lighten($primary-dark, 10%) }
	}

	&-confirm {
		color: $primary-green;

		&:hover { color: darken($primary-green, 20%) }
	}

	&-cancel {
		color: $primary-red;

		&:hover { color: darken($primary-red, 20%) }
	}
}

/* Overlay bg effect */
.overlay-bg {
	position: relative;

	/** So we can interact with the items inside overlay **/
	& > * {
		position: relative;
		z-index: 1;
	}

	&::after {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
	}
}

/* Different levels of overlay opacity */
.overlay-light::after { background: rgba(0, 0, 0, .4) } 
.overlay-normal::after { background: rgba(0, 0, 0, .5) } 
.overlay-dark::after { background: rgba(0, 0, 0, .6) } 

/* Padding resets */
.body-padding-bottom { padding-bottom: 10rem }
.body-padding-top { padding-top: 4.35rem }

/** Sections **/
.section-header {
	margin-bottom: 2.5rem;

	hr {
		width: 5%;
		border: 0;
		border-bottom: 2px solid $primary-red;
	}
}

.showcase-banner {
	background: url('../imgs/about-banner.png') no-repeat;
	padding: 1rem 2rem;
}

/** Show / Hide elements **/
/* I use !important because we don't always know on which element we asign the class ( so we can't make a high element specifity ) */
.visible-flex { display: flex !important }
.visible-block { display: block !important }
.visible-none { display: none !important }

/** Alerts **/
.regex-alert {
	background: $primary-pink;
	padding: .5rem;
	border-radius: $border-radius-primary;
}

/** Alert styling / Form regex styling **/
/* I use !important because we don't always know on which element we asign the class ( so we can't make a high element specifity ) */
.reset-label::after { background: $primary-red !important }

.label-error { color: $primary-pink !important }
.label-error::after { background: $primary-pink !important }
.input-error { border-color: $primary-pink !important }

.label-success { color: $primary-green !important }
.input-success { border-color: $primary-green !important }

.success-sent {
	background: #82C4B0;
	padding: .5rem;
	border-radius: $border-radius-primary;
	text-align: center;
	margin: 1rem auto;
	width: 50%;
}

/** Because we use the classes globally ( in food menu and in shopping cart ) **/
.vegetarian-food, .spicy-food { margin-left: .4rem }
.vegetarian-food { color: $primary-green }
.spicy-food { color: $primary-pink }

/** I make a class for inputs because we have same styling on different pages **/
.input-field {
	border: 1.7px solid $primary-red;
	outline: none;
	background: none;
	padding: .5rem;
	color: $primary-white;
	font-family: inherit;
	border-radius: $border-radius-primary;
	transition: border-color 300ms ease-in-out;

	&:focus { border-color: $primary-white }
	
	&::placeholder { color: $primary-white }
}

/* Hide the default arrow in Internet Explorer 10 and Internet Explorer 11 */
select::-ms-expand { display: none }

select {
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none; /* Remove default arrow */

	option { background: $primary-dark }
}

/** Add custom arrow **/
.select-icon {
	position: absolute;
	top: 50%;
	transform: translateY(-50%);
	right: 15px;
	font-size: 13.33px;
	z-index: -1;
}